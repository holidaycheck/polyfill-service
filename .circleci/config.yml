version: 2.1

orbs:
    change-api: financial-times/change-api@0.24.0

jobs:
  lint_terraform:
    docker:
      - image: "circleci/node:11"
    steps:
      - "checkout"
      - run: "sudo ~/project/.circleci/install_terraform.sh"
      - run: "terraform fmt -check=true fastly/terraform/"
  lint_js:
    docker:
      - image: "circleci/node:11"
    steps:
      - "checkout"
      - run: "sudo npm i -g npm && npm ci"
      - run: "npm run lint"
  unit_tests:
    docker:
      - image: "circleci/node:11"
    steps:
      - "checkout"
      - run: "sudo npm i -g npm && npm ci"
      - run: "npm run test:unit"
  deploy_dev:
    docker:
      - image: "circleci/node:11"
    steps:
      - "checkout"
      - run: "sudo npm i -g npm && npm ci"
      - run: "bash ~/project/.circleci/create_netrc_file.sh"
      - run: "git push https://git.heroku.com/origami-polyfill-service-int.git HEAD:master --force"
      - run: "sudo ~/project/.circleci/install_terraform.sh"
      - run: rm -f terraform.tfstate fastly/terraform/qa_override.tf fastly/terraform/production_override.tf fastly/terraform/domains_override.tf
      - run: terraform init fastly/terraform/
      - run: terraform import -config="fastly/terraform" fastly_service_v1.app $FASTLY_SERVICE_ID_DEV
      - run: terraform apply --auto-approve -var name=origami-polyfill-service-dev.in.ft.com -var domain=origami-polyfill-service-dev.in.ft.com fastly/terraform/
      - run: sleep 60
      - run: "curl -X POST -H \"Fastly-Key: $FASTLY_API_KEY\" https://api.fastly.com/service/$FASTLY_SERVICE_ID_DEV/purge_all"
  integration_tests_dev:
    docker:
      - image: "circleci/node:11"
    steps:
      - "checkout"
      - run: sudo npm i -g npm && npm ci
      - run: HOST=https://origami-polyfill-service-dev.in.ft.com npm run test:integration
  deploy_staging:
    docker:
      - image: "circleci/node:11"
    steps:
      - "checkout"
      - run: "sudo npm i -g npm && npm ci"
      - run: "bash ~/project/.circleci/create_netrc_file.sh"
      - run: "git push https://git.heroku.com/origami-polyfill-service-qa-eu.git HEAD:master --force"
      - run: "git push https://git.heroku.com/origami-polyfill-service-qa-us.git HEAD:master --force"
      - run: "sudo ~/project/.circleci/install_terraform.sh"
      - run: rm -f terraform.tfstate fastly/terraform/dev_override.tf fastly/terraform/production_override.tf fastly/terraform/domains_override.tf
      - run: terraform init fastly/terraform/
      - run: terraform import -config="fastly/terraform" fastly_service_v1.app $FASTLY_SERVICE_ID_STAGING
      - run: terraform apply --auto-approve -var name=qa.polyfill.io -var domain=qa.polyfill.io fastly/terraform/
      - run: sleep 60
      - run: "curl -X POST -H \"Fastly-Key: $FASTLY_API_KEY\" https://api.fastly.com/service/$FASTLY_SERVICE_ID_STAGING/purge_all"
  integration_tests_staging:
    docker:
      - image: "circleci/node:11"
    steps:
      - "checkout"
      - run: sudo npm i -g npm && npm ci
      - run: HOST=https://qa.polyfill.io npm run test:integration
  deploy_service_production:
    docker:
      - image: "circleci/node:11"
    steps:
      - "checkout"
      - run: "sudo npm i -g npm && npm ci"
      - run: "sudo ~/project/.circleci/install_heroku.sh"
      - run: "bash ~/project/.circleci/create_netrc_file.sh"
      - run: "sudo ~/project/.circleci/install_terraform.sh"
      - run: "heroku pipelines:promote --app origami-polyfill-service-qa-eu --to origami-polyfill-service-eu,origami-polyfill-service-us"
      - run: rm -f terraform.tfstate fastly/terraform/dev_override.tf fastly/terraform/qa_override.tf fastly/terraform/domains_override.tf
      - run: terraform init fastly/terraform/
      - run: terraform import -config="fastly/terraform" fastly_service_v1.app $FASTLY_SERVICE_ID_PROD
      - run: terraform apply --auto-approve -var name=cdn.polyfill.io -var domain=cdn.polyfill.io fastly/terraform/

workflows:
  test:
    jobs:
      - lint_terraform:
          filters:
            tags:
              ignore: /^v.*/
            branches:
              ignore: master
      - lint_js:
          filters:
            tags:
              ignore: /^v.*/
            branches:
              ignore: master
      - unit_tests:
          filters:
            tags:
              ignore: /^v.*/
            branches:
              ignore: master
      - deploy_dev:
          filters:
            tags:
              ignore: /^v.*/
            branches:
              ignore: master
          requires:
            - lint_terraform
            - lint_js
            - unit_tests
      - change-api/release-log:
          requires:
            - deploy_dev
          systemCode: 'origami-polyfill-service'
          environment: 'Dev'
          slackChannels: 'origami-deploys'
          filters:
            tags:
              ignore: /^v.*/
            branches:
              only:
               - master
      - integration_tests_dev:
          filters:
            tags:
              ignore: /^v.*/
            branches:
              ignore: master
          requires:
            - deploy_dev
      - deploy_staging:
          filters:
            tags:
              ignore: /^v.*/
            branches:
              only:
               - master
      - change-api/release-log:
          requires:
            - deploy_staging
          systemCode: 'origami-polyfill-service'
          environment: 'Test'
          slackChannels: 'origami-deploys'
          filters:
            tags:
              ignore: /^v.*/
            branches:
              only:
               - master
      - integration_tests_staging:
          filters:
            tags:
              ignore: /^v.*/
            branches:
              only:
                - master
          requires:
            - deploy_staging
      - deploy_service_production:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - change-api/release-log:
          requires:
            - deploy_service_production
          systemCode: 'origami-polyfill-service'
          environment: 'prod'
          slackChannels: 'origami-deploys'
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
